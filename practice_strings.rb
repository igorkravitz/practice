# frozen_string_literal: true

# class Practice
class PracticeStr
  # task 1
  # Дана строка слов, разделёных пробелами. Вывести длиннейшее слово.
  def task1
    array_w = %w[Дана строка слов разделёных пробелами Вывести длиннейшее слово]
    p array_w.max_by(&:length)
  end

  # task 2
  # Дана строка, содержащая кириллицу, латиницу и цифры. Вывести все слова,
  # длина которых равна средней.
  def task2
    array_w = 'Дана строка содержащая кириллицу latinitzu и цифры 123456
                 Вывести все слова длина которых равна средней'.split
    average = (array_w.reduce(0) { |sum, str| sum + str.length } \
                / array_w.size.to_f).round
    puts 'решение с помощью массива'
    array_w.each { |x| puts x if x.length == average }
    puts 'решение с помощью regex'
    array_w.join(' ').scan(/[a-zA-Z0-9а-яА-ЯЁё]+/) do |w|
      puts w if w.length == average
    end
  end

  # task 3
  # Найти в строке первое целиком кириллическое слово.
  def task3
    puts 'Наiти v strоке пеrвое zеликом кириллическое слово'[/\b[А-Яа-яЁё]+\b/]
  end

  # task4
  # Дан текст (строка с переносами). Найти все слова, содержащие лишь три буквы «е».
  # Только для русских слов.
  # Для французских и русских слов.
  # Для любого регистра буквы «о».
  def task4
    str = 'Connaissez vous le proverbe: [Знаете пословицу:] «Ерема, Ерема,
сидел бы ты дома, точил бы свои ВЕретена», — сказал Шиншин, морщась и
улыбаясь. — Cela nous convient à MErvEillE. [Это к нам идет удивительно.]
Уж на что́ Суворова — и того расколотили, à plate couture, [в дребезги,]
а где у нас Суворовы теперь? Je vous demande un peu, [Я вас спрашиваю,] —
беспрестанно перескакивая с русского на французский язык, говорил он.'
    puts 'Найти все слова, содержащие лишь три буквы «е»'
    puts 'Только для русских слов (с учетом регистра букв)'
    str.scan(/
      \b
      [А-ДЖ-Яа-дж-яЁё]*[Ее]
      [А-ДЖ-Яа-дж-яЁё]*[Ее]
      [А-ДЖ-Яа-дж-яЁё]*[Ее]
      [А-ДЖ-Яа-дж-яЁё]*
      \b/x) { |w| puts w }
    puts 'Для французских и русских слов (без учета регистра букв)'
    str.scan(/
      \b
      [а-дж-яёa-df-zàâçéèêëîïôûùüÿñæœ]*[еe]
      [а-дж-яёa-df-zàâçéèêëîïôûùüÿñæœ]*[еe]
      [а-дж-яёa-df-zàâçéèêëîïôûùüÿñæœ]*[еe]
      [а-дж-яёa-df-zàâçéèêëîïôûùüÿñæœ]*
      \b/xi) { |w| puts w }
  end

  # task 5
  # Найти в тексте время в формате «часы:минуты:секунды»
  def task5
    'время 0:55:15, time 12:25:59, текущее время 15:40, date time
    15.06.2021T14:40:00'.scan(/\d{1,2}:\d{2}:\d{2}/) { |w| puts w }
  end

  # task 6
  # Найти все слова без повторяющихся букв (например, «Лисп» или «Ruby»,
  # но не «Паскаль» или «Java»)
  # Только для русскоязычных слов
  # Не учитывайте цифры в словах
  def task6
    str = 'Найти все слова без повторяющихся букв например Лисп или Ruby
    но не Паскаль или Java text in words d1g2t'
    puts str
    puts 'Для любых слов'
    puts str.split.grep(/^(?!.*(.).*\1).*$/)
    puts 'Только для русскоязычных слов'
    puts str.split.grep(/^(?!.*(.).*\1)[а-яё]*$/i)
    puts 'Не учитывать цифры в словах'
    puts str.split.grep(/^(?!.*([^0-9]).*\1)[^0-9]*$/i)
  end

  def main
    # task1
    # task2
    # task3
    # task4
    # task5
    task6
  end
end

PracticeStr.new.main
